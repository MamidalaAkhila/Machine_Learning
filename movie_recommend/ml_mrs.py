# -*- coding: utf-8 -*-
"""ml_mrs.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qzPtG38utyycMPQah_M0sDYaNMk2q3Db
"""

import pandas as pd
import numpy as np

from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

df = pd.read_csv('movie_metadata.csv')
df.head()

df['genres'] = df['genres'].fillna('Unknown').str.lower().str.replace('|', ' ')
df['plot_keywords'] = df['plot_keywords'].fillna('').str.replace('|', ' ')
df['director_name'] = df['director_name'].fillna('')
df['cast_total_facebook_likes'] = df['cast_total_facebook_likes'].fillna(0)

df['metadata'] = df['genres'] + ' ' + df['plot_keywords'] + ' ' + df['director_name']

# TF-IDF
tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(df['metadata'])

# CountVectorizer
count = CountVectorizer(stop_words='english')
count_matrix = count.fit_transform(df['metadata'])

cosine_sim_tfidf = cosine_similarity(tfidf_matrix, tfidf_matrix)
cosine_sim_count = cosine_similarity(count_matrix, count_matrix)

# Reset index for title matching
df = df.reset_index()
indices = pd.Series(df.index, index=df['movie_title'].str.lower().str.strip())

def get_recommendations(title, cosine_sim=cosine_sim_tfidf, n=10):
    title = title.lower().strip()
    idx = indices.get(title)

    if idx is None:
        return "Movie not found.Try the checking the spelling."

    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:n+1]

    movie_indices = [i[0] for i in sim_scores]
    return df['movie_title'].iloc[movie_indices]

print(df['movie_title'].str.lower().str.strip().unique()[:20])

get_recommendations('Avatar', cosine_sim=cosine_sim_tfidf, n=5)

get_recommendations('Sam Mendes', cosine_sim=cosine_sim_tfidf, n=5)